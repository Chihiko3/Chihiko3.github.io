<!doctype html>
<html>
<head>
    <meta charset="utf-8"/>
    <title>Death Roll | Chihiko's</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="stylesheet" href="../1140.css" type="text/css" media="screen" />
    <link rel="stylesheet" href="../mobile.css" media="handheld, only screen and (max-width: 767px)" />
    <link rel="stylesheet" href="../layout.css" type="text/css" media="screen" />
</head>

<body id="arcbody">
<div class="container">
    <div class="row">
        <div class="twocol" id="leftcol"><br/></div>
        <div class="sevencol last" id="content">
            <h1>Death Roll</h1>
            <p>出于实际需求的但是最后未能实用的小游戏尝试 :D</p>
            <p><em>last update 01/06/2022</em></p>
            <p><img style="border:5px solid black" alt="Main" src="DeathRoll_img/Main.png"></p>
            <li><a href="https://github.com/Chihiko3/DeathRoll/releases/tag/DeathRoll_ver_1.0">下载链接</a></li>
            <p></p>
            <h2>灵感</h2>
            <p>灵感主要来自于两个方面，一是需求，二是实现。</p>
            <p>需求方面，之所以想做这样一个游戏，是因为偶尔会面临出去吃饭该谁结账的烦恼以及抢着结账的情况。出于这个简单的原因，做了这样一个游戏（笑）。</p>
            <p>实现方面，因为目的是随机选择一个人，所以往随机选择的方向思考。但是如果直接单纯地给人分配一个数字，随机到几就是谁的话，也未免太无聊了。所以就想着把这样一个随机的过程做的好玩一点，于是就有了游戏的雏形。</p>
            <p>最开始是直接用console写的C#代码，但是发现在视觉表现上差点意思，就发挥了一点美术能力，自己画了全部的资源。因为个人很喜欢GB、GBA的色彩，又因为想要表达随机和赌徒的感觉，就合并两者，做了一个复古风格的Casino画面。</p>
            <h2>玩法</h2>
            <p>最开始的玩法是开局屏幕显示100数字，然后每个人轮流Roll点。每一次Roll点过后获得的新点数作为下一次Roll点的上限，且结果不为上限。比如第一次Roll是1-100，那么结果不可能是100，这里假设是43。那么第二次Roll的范围就是1-43，以此类推，谁最终Roll到了1谁就买单。</p>
            <p>后来觉得不够刺激，就改为了每次Roll都不排除上限，且能Roll到0。也就是说，在数字越来越小的时候，会很刺激。比如你的上家Roll到了2，现在到你了...</p>
            <p><img style="border:5px solid black" alt="Win" src="DeathRoll_img/Win.png"></p>
            <p><img style="border:5px solid black" alt="Lose" src="DeathRoll_img/Lose.png"></p>
            <h2>反思</h2>
            <p>这两版规则各有各的好。</p>
            <p>第一版能够很快的结束，因为在实用场景中，作为一个做决定的方式，它应该拥有一定的效率。</p>
            <p>第二版损失了效率，但是让整个过程有趣了一点。但是后来思考的时候，发现第二种方法其实还有一个特别不好的地方，因为0和Roll上限的存在，会让游戏中随机性太过明显，导致游戏反而缺少了刺激感。这个太过明显是站在使用者角度来说的。</p>
            <p>显然，在第一版中，紧张感会随着游戏继续变得越来越刺激，因为数字在变得越来越小，人也在一直轮流。每个人都会担心自己上一个人会不会roll到一个让自己陷入困境的点数，比如4或者3。因为陷入这种境地，自己会变得特别危险，没有可以逃脱的方法。</p>
            <p>但是在第二版中，这种逃脱的方法被提供了。提供本身是没错的，问题在于提供的太多了。提供了2种，一是可以Roll到上限，二是可以Roll到0。（在一款纯随机的游戏中，）如果逃脱方式的数量超过了死亡方式的数量，在游玩的时候，这种把命运交给运气的感觉就会很强烈，进而就会产生巨大的反作用力，让使用者觉得Roll什么都无所谓了，反正都是看运气，大大降低了游戏随机性所带来的刺激感。</p>
            <h2>改进</h2>
            <p>现在看来，应该只在0和Roll上限之中选一个，这样游戏的刺激性会相较于第一种更进一步。我更倾向于后者，因为后者拥有前者所缺失的效率。如果每一次Roll到最后发现是0的话，游戏还得重新开始，损失的效率太多。但是如果每次都只是可以Roll到上限的话，整个流程会流畅很多。</p>
            <p>但是出于一个纪念意义，就不改了，因为这算得上是我自己负责代码、美术、音频的第一个游戏。我还挺满意的。</p>
            
            <!-- pulic domain notation -->
            <div id="cc">
                <p xmlns:dct="http://purl.org/dc/terms/">
                    <a rel="license" id="cclogo" 
                       href="http://creativecommons.org/publicdomain/zero/1.0/">
                        <img src="http://i.creativecommons.org/p/zero/1.0/88x31.png" style="border-style: none;" alt="CC0" />
                    </a>
                    <span id="cctext">
                        To the extent possible under law,
                        <span rel="dct:publisher" resource="[_:publisher]">the person who associated CC0</span>
                        with this work has waived all copyright and related or neighboring
                        rights to this work.
                    </span>
                </p>
            </div>

            <!-- pulic domain notation end-->
            
            <!-- foot navigation -->
            <div class="row">
                <div class="sevencol">
                    <span id="footnav"> <a href="../index.htm">← home</a></span>
                </div>
                <div class="fivecol pad last"><br/></div>
            </div>
            <!-- foot navigation end -->
            
        </div>
    </div>
</div>
</body>
</html>